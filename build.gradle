// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url RELEASE_REPOSITORY_URL }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


def daggerVersion = "2.16"
def retrofitVersion = "2.5.0"
def supportVersion = "1.0.0"
def okHttpVersion = '3.14.0'
def gsonVersion = '2.8.1'
def rxJavaVersion = '2.2.2'
def rxAndroidVersion = '2.0.1'
def leakCanaryVersion = "1.6.3"
def glideVersion = '4.9.0'
def jUnitVersion  = '4.12'
def assertJVersion  = '1.7.1'
def mockitoVersion  = '1.9.5'
def autoService = '1.0-rc4'
def rxRelayVersion = '2.1.0'


project.ext {
    applicationId = "com.wkw.modularization"
    buildToolsVersion = "28.0.3"
    compileSdkVersion = 28
    minSdkVersion = 16
    targetSdkVersion = 28
    versionCode = 1
    versionName = "1.0.0"
    abortOnLintError = false
    checkLintRelease = false
    useJack = false
    abortOnLintError = false
    javaVersion = JavaVersion.VERSION_1_8
    annotation = "androidx.annotation:annotation:${supportVersion}"
    libSupportAppcompat = "androidx.appcompat:appcompat:${supportVersion}"
    libSupportDesign = "com.google.android.material:material:${supportVersion}"
    libSupportRecyclerview = "androidx.recyclerview:recyclerview:${supportVersion}"
//    libSupportV4 = "androidx.legacy:legacy-support:${supportVersion}"
    libRxAndroid = "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    libRxJava = "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    libEventBus = "org.greenrobot:eventbus:3.0.0"
    libGlide = "com.github.bumptech.glide:glide:${glideVersion}"
    libGlideCompiler = "com.github.bumptech.glide:compiler:${glideVersion}"
    libGson = "com.google.code.gson:gson:${gsonVersion}"
    debugDependencies = [
            leakCanary: "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
    ]
    releaseDependencies = [
            leakCanary: "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
    ]
    libRetrofit = "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    libRetrofitConverterGson = "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    libRetrofitAdapterRxJava = "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    libOkHttpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    libDagger = "com.google.dagger:dagger:${daggerVersion}"
    libDaggerSupport = "com.google.dagger:dagger-android-support:${daggerVersion}"
    libDaggerCompiler = "com.google.dagger:dagger-compiler:${daggerVersion}"
    libDaggerAndroidCompiler = "com.google.dagger:dagger-android-processor:${daggerVersion}"
    libRxPermissions = 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    libRxPreferences = 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'
    libAutoService = "com.google.auto.service:auto-service:${autoService}"
    libRxrelay2 = "com.jakewharton.rxrelay2:rxrelay:${rxRelayVersion}"
    testJunit = "junit:junit:${jUnitVersion}"
    testMockito = "org.mockito:mockito-core:${mockitoVersion}"
    testAssertj = "org.assertj:assertj-core:${assertJVersion}"
}